---

- name: "Create CI namespace {{ test_name }} for test vms"
  k8s:
    name: "{{ test_name }}"
    kind: Namespace
    state: present
  register: create_ci_ns
  failed_when: create_ci_ns.changed == false

- name: "Create temp dir /tmp/{{ test_name }} for CI files"
  file:
    path: "/tmp/{{ test_name }}"
    state: directory

- import_tasks: spawn-vms.yml

- name: Wait for SSH to become available on vms
  wait_for:
    host: "{{ item.stdout }}"
    port: 22
    delay: 30
    timeout: 240
    state: started
  register: vm_ssh_able
  ignore_errors: true
  with_items:
    - "{{ vm_ips.results }}"

- name: Debug vm_ssh_able
  debug:
    var: vm_ssh_able

- name: "Remove machine that failed to start and retry"
  shell: "kubectl delete vm -n {{ test_name }}"
  with_items:
    - vm_ssh_able
  when:
    #- item.msg.find('timeout') != -1
    - vm_ssh_able is failed

- import_tasks: spawn-vms.yml
  when:
    - vm_ssh_able is failed

- name: Wait for SSH to become available on vms that failed
  wait_for:
    host: "{{ item.stdout }}"
    port: 22
    delay: 30
    timeout: 240
    state: started
  when:
    - vm_ssh_able is failed
  with_items:
    - "{{ vm_ips.results }}"

- name: "Create inventory for CI test in file /tmp/{{ test_name }}/inventory"
  template:
    src: "inventory.j2"
    dest: "{{ inventory_path }}"
  vars:
    vms: "{{ vm_ips }}"
