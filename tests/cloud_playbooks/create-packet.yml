---
- hosts: localhost
  gather_facts: no
  tasks:
     - name: create_kvm inventory
       add_host:
        name: "{{lookup('env', 'KVM_HOST_IP')}}"
        groups:
          - kvm
  vars:
    ansible_connection: local

- hosts: kvm
  become: false
  gather_facts: no
  vars:
    vms_dir: /images/vms
    ci_job_name: "{{ lookup('env', 'CI_JOB_NAME') }}"
    cloud_image: ubuntu-1604
    ansible_ssh_user: root
    gen_inventory_ips:
    inventory_file: "{{inventory_path}}"
  tasks:
    - name: include vars for test {{ ci_job_name }}
      include_vars: "../files/{{ ci_job_name }}.yml"

    - name: replace_test_id
      set_fact:
        test_name: "{{test_id |regex_replace('\\.', '-')}}"
        vmcount: "{%- if mode in ['separate', 'separate-scale', 'ha', 'ha-scale'] -%}{{3|int}}{%- elif mode == 'aio' -%}{{1|int}}{%- else -%}{{2|int}}{%- endif -%}"

    - name: replace_test_id
      set_fact:
        test_name: "{{test_id |regex_replace('\\.', '-')}}"

    # - name: include inventories
    #   include_vars: "vars/inventory-modes.yml"

    - name:  set inventory
      set_fact:
        inventories: "{{ lookup('template', 'vars/inventory-modes.yml') | from_yaml}}"
        deploy_modes:
          '3':
            - {name: "k8s-{{test_name}}-1", image_name: "{{cloud_image}}"}
            - {name: "k8s-{{test_name}}-2", image_name: "{{cloud_image}}"}
            - {name: "k8s-{{test_name}}-3", image_name: "{{cloud_image}}"}
          '2':
            - {name: "k8s-{{test_name}}-1", image_name: "{{cloud_image}}"}
            - {name: "k8s-{{test_name}}-2", image_name: "{{cloud_image}}"}
          '1':
            - {name: "k8s-{{test_name}}-1", image_name: "{{cloud_image}}"}

    - name: show vars
      debug: msg="{{deploy_modes.keys()}}"

    - name: show vars
      debug: msg="{{inventories}}"

    - set_fact:
        vms: "{{deploy_modes[vmcount]}}"
        gen_inventory: "{{inventories['inventories'][mode]}}"

    - name: show vars
      debug: var=vms

    - name: show vars
      debug: var=gen_inventory

    - name: start-vm
      include_role:
        name:  kubespray-ci
      tags:
        - start-vm
      when: action|default("start") == "start"

    - name: stop-vm
      command: kubectl delete vmirs k8s-{{test_name}} -n gitlab-runner
      when: action|default("start") == "destroy"
      tags:
        - stop-vm
