apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: calico-kube-controllers
  namespace: kube-system
  labels:
    k8s-app: calico-kube-controllers
    kubernetes.io/cluster-service: "true"
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ''
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      kubernetes.io/cluster-service: "true"
      k8s-app: calico-kube-controllers
  template:
    metadata:
      name: calico-kube-controllers
      namespace: kube-system
      labels:
        kubernetes.io/cluster-service: "true"
        k8s-app: calico-kube-controllers
    spec:
      hostNetwork: true
      serviceAccountName: calico-kube-controllers
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
{% if kube_version is version('v1.11.1', '>=') %}
      priorityClassName: system-cluster-critical
{% endif %}
      containers:
        - name: calico-kube-controllers
          image: {{ calico_policy_image_repo }}:{{ calico_policy_image_tag }}
          imagePullPolicy: {{ k8s_image_pull_policy }}
          resources:
            limits:
              cpu: {{ calico_policy_controller_cpu_limit }}
              memory: {{ calico_policy_controller_memory_limit }}
            requests:
              cpu: {{ calico_policy_controller_cpu_requests }}
              memory: {{ calico_policy_controller_memory_requests }}
          env:
            - name: ETCD_ENDPOINTS
              value: "{{ etcd_access_addresses }}"
            - name: ETCD_CA_CERT_FILE
              value: "{{ calico_cert_dir }}/ca_cert.crt"
            - name: ETCD_CERT_FILE
              value: "{{ calico_cert_dir }}/cert.crt"
            - name: ETCD_KEY_FILE
              value: "{{ calico_cert_dir }}/key.pem"
            - name: ENABLED_CONTROLLERS
              value: "{{ calico_enabled_controllers }}"
          volumeMounts:
            - name: etcd-certs
              mountPath: {{ calico_cert_dir }}
              readOnly: true
          readinessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -r
      volumes:
      - name: etcd-certs
        hostPath:
          path: {{ calico_cert_dir }}
