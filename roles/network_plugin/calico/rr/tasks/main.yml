---
- name: Calico-rr | Pre-upgrade tasks
  include_tasks: pre.yml

- name: Calico-rr | Get calicoctl version
  shell: "{{ bin_dir }}/calicoctl.sh version  | grep Version | awk '{print $NF}'"
  register: calicoctl_version

- name: Calico-rr | Patch current node object (>=v3.11.1)
  command: >-
    {{ bin_dir }}/calicoctl.sh patch node {{ kube_override_hostname }}
    '{"spec":{"bgp": {"routeReflectorClusterID": "{{ cluster_id }}"}}}'
    --type json
  register: calico_rr_patch
  until: calico_rr_patch is succeeded
  delay: "{{ retry_stagger | random + 3 }}"
  retries: 10
  when: calicoctl_version is version('v3.11.1', ">=")

- name: Calico-rr | Fetch current node object (<v3.11.1)
  command: "{{ bin_dir }}/calicoctl.sh get node {{ kube_override_hostname }} -ojson"
  register: calico_rr_node
  until: calico_rr_node is succeeded
  delay: "{{ retry_stagger | random + 3 }}"
  retries: 10
  when: calicoctl_version is version('v3.11.1', "<")

- name: Calico-rr | Set route reflector cluster ID (<v3.11.1)
  set_fact:
    calico_rr_node_patched: >-
      {{ calico_rr_node.stdout | from_json | combine({ 'spec': { 'bgp':
      { 'routeReflectorClusterID': cluster_id }}}, recursive=True) }}
  when: calicoctl_version is version('v3.11.1', "<")

- name: Calico-rr | Configure route reflector (<v3.11.1)
  shell: "{{ bin_dir }}/calicoctl.sh replace -f-"
  args:
    stdin: "{{ calico_rr_node_patched | to_json }}"
  when: calicoctl_version is version('v3.11.1', "<")

- name: Calico-rr | Set label for route reflector
  command: >-
    {{ bin_dir }}/calicoctl.sh label node {{ kube_override_hostname }}
    'i-am-a-route-reflector=true' --overwrite
