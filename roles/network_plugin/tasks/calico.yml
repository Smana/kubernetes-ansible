---
- name: Calico | Install calicoctl bin
  synchronize:
    src: "{{ local_release_dir }}/calico/bin/calicoctl"
    dest: "{{ bin_dir }}/calicoctl"
    archive: no
    times: yes
  delegate_to: "{{ groups['downloader'][0] }}"
  notify: restart calico-node

- name: Calico | install calicoctl
  file: path={{ bin_dir }}/calicoctl mode=0755 state=file

- name: Calico | Create calicoctl symlink (needed by kubelet)
  file:
    src: /usr/local/bin/calicoctl
    dest: /usr/bin/calicoctl
    state: link

- wait_for:
    port: 2379
  when: inventory_hostname in groups['kube-master']

- name: Calico | Check if calico network pool has already been configured
  uri:
    url: "http://127.0.0.1:2379/v2/keys/calico/v1/ipam/v4/pool"
    return_content: yes
    status_code: 200,404
  register: calico_conf
  run_once: true
  delegate_to: "{{ groups['etcd'][0] }}"

- name: Calico | Configure calico network pool
  shell: calicoctl pool add {{ kube_pods_subnet }}
  run_once: true
  when: calico_conf.status == 404
  delegate_to: "{{ groups['etcd'][0] }}"

- name: Calico | Get calico configuration from etcd
  uri:
    url: "http://127.0.0.1:2379/v2/keys/calico/v1/ipam/v4/pool"
    return_content: yes
  register: calico_pools
  run_once: true
  delegate_to: "{{ groups['etcd'][0] }}"

- name: Calico | Check if calico pool is properly configured
  fail:
    msg: 'Only one network pool must be configured and it must be the subnet {{ kube_pods_subnet }}.
    Please erase calico configuration and run the playbook again ("etcdctl rm --recursive /calico/v1/ipam/v4/pool")'
  when: ( calico_pools.json['node']['nodes'] | length > 1 ) or
        ( not calico_pools.json['node']['nodes'][0]['key'] | search(".*{{ kube_pods_subnet | ipaddr('network') }}.*") )
  run_once: true
  delegate_to: "{{ groups['etcd'][0] }}"

- name: Calico | Write calico-node configuration
  template: src=calico/calico.conf.j2 dest=/usr/libexec/kubernetes/kubelet-plugins/net/exec/calico/calico_kubernetes.ini
  notify: restart calico-node

- name: Calico | Write calico-node systemd init file
  template: src=calico/calico-node.service.j2 dest=/etc/systemd/system/calico-node.service
  when: init_system == "systemd"
  notify: restart systemd-calico-node

- name: Calico | Write calico-node initd script
  template: src=calico/deb-calico.initd.j2 dest=/etc/init.d/calico-node owner=root mode=755
  when: init_system == "sysvinit" and ansible_os_family == "Debian"
  notify: restart calico-node

- name: Calico | Write calico-node initd script
  template: src=calico/rh-calico.initd.j2 dest=/etc/init.d/calico-node owner=root mode=755
  when: init_system == "sysvinit" and ansible_os_family == "RedHat"
  notify: restart calico-node

- name: Calico | Enable calico-node
  service: name=calico-node enabled=yes state=started

- name: Calico | Disable node mesh
  shell: calicoctl bgp node-mesh off
  environment:
     ETCD_AUTHORITY: "{{ groups['etcd'][0] }}:2379"
  when: peer_with_router|default(false) and inventory_hostname in groups['kube-node']

- name: Calico | Configure peering with router(s)
  shell: calicoctl node bgp peer add {{ item.router_id }} as {{ item.as }}
  environment:
     ETCD_AUTHORITY: "{{ groups['etcd'][0] }}:2379"
  with_items: peers
  when: peer_with_router|default(false) and inventory_hostname in groups['kube-node']
