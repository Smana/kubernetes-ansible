---
- name: Configure | Remove fault etcd
  include: remove_fault_etcd.yml
  delegate_to: "{{ groups['etcd'][0] }}"
  run_once: true

- name: Configure | Check if etcd cluster is healthy
  shell: "{{ bin_dir }}/etcdctl --endpoints={{ etcd_access_addresses }} cluster-health | grep -q 'cluster is healthy'"
  register: etcd_cluster_is_healthy
  ignore_errors: true
  changed_when: false
  check_mode: no
  when: is_etcd_master and etcd_cluster_setup
  tags:
    - facts
  environment:
    ETCDCTL_CERT_FILE: "{{ etcd_cert_dir }}/admin-{{ inventory_hostname }}.pem"
    ETCDCTL_KEY_FILE: "{{ etcd_cert_dir }}/admin-{{ inventory_hostname }}-key.pem"

- name: Configure | Check if etcd-events cluster is healthy
  shell: "{{ bin_dir }}/etcdctl --endpoints={{ etcd_events_access_addresses }} cluster-health | grep -q 'cluster is healthy'"
  register: etcd_events_cluster_is_healthy
  ignore_errors: true
  changed_when: false
  check_mode: no
  when: is_etcd_master and etcd_events_cluster_setup
  tags:
    - facts
  environment:
    ETCDCTL_CERT_FILE: "{{ etcd_cert_dir }}/admin-{{ inventory_hostname }}.pem"
    ETCDCTL_KEY_FILE: "{{ etcd_cert_dir }}/admin-{{ inventory_hostname }}-key.pem"

- name: Configure | Check if member is in etcd cluster
  shell: "{{ bin_dir }}/etcdctl --no-sync --endpoints={{ etcd_access_addresses }} member list | grep -q {{ etcd_access_address }}"
  register: etcd_member_in_cluster
  #ignore_errors: true
  failed_when: false
  changed_when: false
  check_mode: no
  when: is_etcd_master and etcd_cluster_setup
  tags:
    - facts
  environment:
    ETCDCTL_CERT_FILE: "{{ etcd_cert_dir }}/admin-{{ inventory_hostname }}.pem"
    ETCDCTL_KEY_FILE: "{{ etcd_cert_dir }}/admin-{{ inventory_hostname }}-key.pem"

- name: Configure | Check if member is in etcd-events cluster
  shell: "{{ bin_dir }}/etcdctl --no-sync --endpoints={{ etcd_events_access_addresses }} member list | grep -q {{ etcd_access_address }}"
  register: etcd_events_member_in_cluster
  #ignore_errors: true
  failed_when: false
  changed_when: false
  check_mode: no
  when: is_etcd_master and etcd_events_cluster_setup
  tags:
    - facts
  environment:
    ETCDCTL_CERT_FILE: "{{ etcd_cert_dir }}/admin-{{ inventory_hostname }}.pem"
    ETCDCTL_KEY_FILE: "{{ etcd_cert_dir }}/admin-{{ inventory_hostname }}-key.pem"

- name: Configure | Add a new member to the etcd cluster
  shell: "{{ bin_dir }}/etcdctl --endpoints={{ etcd_access_addresses }} member add {{ etcd_member_name_recover }} {{ etcd_peer_url }}"
  ignore_errors: true
  changed_when: false
  check_mode: no
  when: inventory_hostname in groups['etcd-add'] and is_etcd_master and etcd_cluster_setup and etcd_cluster_is_healthy.rc == 0 and etcd_member_in_cluster.rc != 0
  environment:
    ETCDCTL_CERT_FILE: "{{ etcd_cert_dir }}/admin-{{ inventory_hostname }}.pem"
    ETCDCTL_KEY_FILE: "{{ etcd_cert_dir }}/admin-{{ inventory_hostname }}-key.pem"

- name: Configure | Add a new member to the etcd-events cluster
  shell: "{{ bin_dir }}/etcdctl --endpoints={{ etcd_events_access_addresses }} member add '{{ etcd_member_name_recover }}-events' {{ etcd_events_peer_url }}"
  ignore_errors: true
  changed_when: false
  check_mode: no
  when: inventory_hostname in groups['etcd-add'] and is_etcd_master and etcd_events_cluster_setup and etcd_events_cluster_is_healthy.rc == 0 and etcd_events_member_in_cluster.rc != 0
  environment:
    ETCDCTL_CERT_FILE: "{{ etcd_cert_dir }}/admin-{{ inventory_hostname }}.pem"
    ETCDCTL_KEY_FILE: "{{ etcd_cert_dir }}/admin-{{ inventory_hostname }}-key.pem"

- name: Configure | Copy etcd.service systemd file
  template:
    src: "etcd-{{ etcd_deployment_type }}.service.j2"
    dest: /etc/systemd/system/etcd.service
    backup: yes
  when: is_etcd_master and etcd_cluster_setup 

- name: Configure | Copy etcd-events.service systemd file
  template:
    src: "etcd-events-{{ etcd_deployment_type }}.service.j2"
    dest: /etc/systemd/system/etcd-events.service
    backup: yes
  when: is_etcd_master and etcd_events_cluster_setup

- name: Configure | reload systemd
  command: systemctl daemon-reload
  when: is_etcd_master 


- include_tasks: refresh_config.yml
  when: is_etcd_master


- name: Configure | Ensure etcd is running
  service:
    name: etcd
    state: started
    enabled: yes
  when: (is_etcd_master and etcd_cluster_setup and etcd_member_in_cluster.rc != 0) or etcd_secret_changed|default(false)

- name: Configure | Ensure etcd-events is running
  service:
    name: etcd-events
    state: started
    enabled: yes
  when: (is_etcd_master and etcd_events_cluster_setup and etcd_events_member_in_cluster.rc != 0) or etcd_secret_changed|default(false)

