- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_os_family|lower }}.yml"
        - defaults.yml
      paths:
        - ../vars
      skip: true
  tags: facts

- name: create directories
  file:
      path: '{{ item }}'
      state: directory
  with_items:
      - /etc/ipsec.d
  become: yes

- name: intit nsss
  shell: |
      set -e
      docker run -v /etc/ipsec.d:/etc/ipsec.d cornelius/docker-ipsec-libreswan  \
      ipsec initnss
  become: yes
  args:
     creates: /etc/ipsec.d/cert9.db

- name: create hostkey
  shell: |
      docker run -v /etc/ipsec.d:/etc/ipsec.d cornelius/docker-ipsec-libreswan   \
          ipsec newhostkey --output /etc/ipsec.d/{{ ansible_hostname }}.secrets
  become: yes
  args:
     creates: /etc/ipsec.d/{{ ansible_hostname  }}.secrets

- name: register host key
  shell: |
      docker run -v /etc/ipsec.d:/etc/ipsec.d cornelius/docker-ipsec-libreswan   \
           ipsec showhostkey --list | sed -n '1s/.* //p'
  register: ipsec_ckaid
  become: yes
  changed_when: false
- name: register ipsec_left
  shell: |
      docker run -v /etc/ipsec.d:/etc/ipsec.d cornelius/docker-ipsec-libreswan   \
           ipsec showhostkey --left --ckaid {{ ipsec_ckaid.stdout }}
  register: ipsec_left
  changed_when: false
  become: yes
- name: register ipsec_right
  shell: |
      docker run -v /etc/ipsec.d:/etc/ipsec.d cornelius/docker-ipsec-libreswan   \
               ipsec showhostkey --right --ckaid {{ ipsec_ckaid.stdout }}
  register: ipsec_right
  become: yes
  changed_when: false

- name: template /etc/ipsec.d/cluster.conf
  template:
      dest: /etc/ipsec.d/cluster.conf
      src: templates/cluster.conf.j2
  become: yes
  register: ipsec_cluster_conf

- name: create ipsec service
  copy:
      content: |
          [Unit]
          Description=LibreSwan IPSEC running in ipsec-libreswan
          After=network-online.target
          Wants=network-online.target
          [Service]
          ExecStartPre={{ ipsec_modprobe_binary }}  af_key
          ExecStartPre=/usr/bin/docker pull cornelius/docker-ipsec-libreswan
          ExecStartPre=-/usr/bin/docker rm -f ipsec-libreswan
          ExecStart=/usr/bin/docker run --privileged --net host -v /etc/ipsec.d:/etc/ipsec.d --name=ipsec-libreswan cornelius/docker-ipsec-libreswan
          ExecStop=/usr/bin/docker stop ipsec-libreswan
          ExecReload=/usr/bin/docker exec ipsec-libreswan systemctl reload ipsec
          Restart=always
          [Install]
          WantedBy=network-online.target
      dest: /etc/systemd/system/ipsec.service
  register: ipsec_systemd_unit_file

- name: start and enable ipsec service
  systemd:
    name: ipsec
    state: '{{ ipsec_cluster_conf.changed|ternary("restarted","started") }}'
    enabled: yes
    daemon_reload: '{{ ipsec_systemd_unit_file|changed }}'

