---
- name: Wait for apiserver
  shell: "{{ bin_dir }}/kubectl get nodes"
  environment:
    - KUBECONFIG: "{{ ansible_env.HOME | default('/root') }}/.kube/config"
  register: apiserver_is_ready
  until: apiserver_is_ready.rc == 0
  retries: 6
  delay: 10
  changed_when: false
  when: groups['broken_kube-controlplane']

- name: Delete broken kube-controlplane nodes from cluster
  shell: "{{ bin_dir }}/kubectl delete node {{ item }}"
  environment:
    - KUBECONFIG: "{{ ansible_env.HOME | default('/root') }}/.kube/config"
  with_items: "{{ groups['broken_kube-controlplane'] }}"
  register: delete_broken_kube_controlplanes
  failed_when: false
  when: groups['broken_kube-controlplane']

- name: Fail if unable to delete broken kube-controlplane nodes from cluster
  fail:
    msg: "Unable to delete broken kube-controlplane node: {{ item.item }}"
  loop: "{{ delete_broken_kube_controlplanes.results }}"
  changed_when: false
  when:
    - groups['broken_kube-controlplane']
    - "item.rc != 0 and not 'NotFound' in item.stderr"
