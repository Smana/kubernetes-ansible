---
# This approach of deploying kube-apiserver as a service has only been tested
# using Azure and Ubuntu 16.04 so far, but solves the issue where
# kube-apiserver refuses to start up.
- import_tasks: azure-kube-apiserver.yml
  when: cloud_provider is defined and cloud_provider == 'azure' and 
        bootstrap_os is defined and bootstrap_os == 'ubuntu'

- name: Write kube-apiserver manifest
  template:
    src: manifests/kube-apiserver.manifest.j2
    dest: "{{ kube_manifest_dir }}/kube-apiserver.manifest"
  notify: Master | Restart apiserver
  tags:
    - kube-apiserver
  when: (cloud_provider is undefined or (cloud_provider is defined and cloud_provider != 'azure')) and 
        (boostrap_os is undefined or (bootstrap_os is defined and bootstrap_os != 'ubuntu'))
  
- meta: flush_handlers

- name: Write kube-scheduler policy file
  template:
    src: kube-scheduler-policy.yaml.j2
    dest: "{{ kube_config_dir }}/kube-scheduler-policy.yaml"
  notify: Master | Restart kube-scheduler
  tags:
    - kube-scheduler

- name: Write kube-scheduler kubeconfig
  template:
    src: kube-scheduler-kubeconfig.yaml.j2
    dest: "{{ kube_config_dir }}/kube-scheduler-kubeconfig.yaml"
  tags:
    - kube-scheduler

- name: Write kube-scheduler manifest
  template:
    src: manifests/kube-scheduler.manifest.j2
    dest: "{{ kube_manifest_dir }}/kube-scheduler.manifest"
  notify: Master | Restart kube-scheduler
  tags:
    - kube-scheduler

- name: Write kube-controller-manager kubeconfig
  template:
    src: kube-controller-manager-kubeconfig.yaml.j2
    dest: "{{ kube_config_dir }}/kube-controller-manager-kubeconfig.yaml"
  tags:
    - kube-controller-manager

- name: Write kube-controller-manager manifest
  template:
    src: manifests/kube-controller-manager.manifest.j2
    dest: "{{ kube_manifest_dir }}/kube-controller-manager.manifest"
  notify: Master | Restart kube-controller-manager
  tags:
    - kube-controller-manager

- meta: flush_handlers
