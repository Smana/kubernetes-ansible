---
apiVersion: apiserver.config.k8s.io/v1beta1
kind: AuthenticationConfiguration
{% if kube_apiserver_structured_auth_jwt_issuers | length > 0 %}
jwt:
{% for issuer in kube_apiserver_structured_auth_jwt_issuers %}
- issuer:
    url: "{{ issuer.issuer.url }}"
{% if issuer.issuer.discoveryURL is defined %}
    discoveryURL: "{{ issuer.issuer.discoveryURL }}"
{% endif %}
    audiences:
{% for audience in issuer.issuer.audiences %}
    - {{ audience }}
{% endfor %}
    audienceMatchPolicy: {{ issuer.issuer.audienceMatchPolicy }}
{% if issuer.claimValidationRules is defined %}
  claimValidationRules:
{% for validationRule in issuer.claimValidationRules %}
    expression: "{{ validationRule.expression }}"
    message: "{{ validationRule.message }}"
{% endfor %}
{% endif %}
  claimMappings:
    username:
      expression: "{{ issuer.claimMappings.username.expression }}"
    groups:
      expression: "{{ issuer.claimMappings.groups.expression }}"
    uid:
      expression: "{{ issuer.claimMappings.uid.expression }}"
{% if issuer.claimMappings.extra is defined %}
    extra:
{% for extra in issuer.claimMappings.extra %}
    - key: "{{ extra.key }}"
      expression: "{{ extra.expression }}"
{% endfor %}
{% endif %}
{% if issuer.userValidationRules | length > 0 %}
  userValidationRules:
{% for rule in issuer.userValidationRules %}
  - expression: "{{ rule.expression }}"
    message: "{{ rule.message }}"
{% endfor %}
{% endif %}
{% endfor %}
{% else %}
jwt:
{% endif %}
