---
### NOTE: This playbook cannot be used to deploy any new nodes to the cluster.
### Additional information:
### * Will not upgrade etcd
### * Will not upgrade network plugins
### * Will not upgrade Docker
### * Will not pre-download containers or kubeadm
### * Currently does not support Vault deployment.
###
### In most cases, you probably want to use upgrade-cluster.yml playbook and
### not this one.

- hosts: localhost
  gather_facts: False
  roles:
    - { role: kubernetes.kubespray.kubespray_defaults}
    - { role: kubernetes.kubespray.bastion_ssh_config, tags: ["localhost", "bastion"]}

- hosts: k8s_cluster:etcd:calico_rr
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  gather_facts: false
  vars:
    # Need to disable pipelining for bootstrap_os as some systems have requiretty in sudoers set, which makes pipelining
    # fail. bootstrap_os fixes this on these systems, so in later plays it can be enabled.
    ansible_ssh_pipelining: false
  roles:
    - { role: kubernetes.kubespray.kubespray_defaults}
    - { role: kubernetes.kubespray.bootstrap_os, tags: bootstrap_os}

- hosts: k8s_cluster:etcd:calico_rr
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  roles:
    - { role: kubernetes.kubespray.kubespray_defaults}
    - { role: kubernetes.kubespray.kubernetes.preinstall, tags: preinstall }

- name: Handle upgrades to master components first to maintain backwards compat.
  hosts: kube_control_plane
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  serial: 1
  roles:
    - { role: kubernetes.kubespray.kubespray_defaults}
    - { role: kubernetes.kubespray.upgrade.pre_upgrade, tags: pre_upgrade }
    - { role: kubernetes.kubespray.kubernetes.node, tags: node }
    - { role: kubernetes.kubespray.kubernetes.control_plane, tags: master, upgrade_cluster_setup: true }
    - { role: kubernetes.kubespray.kubernetes.client, tags: client }
    - { role: kubernetes.kubespray.kubernetes_apps.cluster_roles, tags: cluster-roles }
    - { role: kubernetes.kubespray.upgrade.post_upgrade, tags: post_upgrade }

- name: Finally handle worker upgrades, based on given batch size
  hosts: kube_node:!kube_control_plane
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  serial: "{{ serial | default('20%') }}"
  roles:
    - { role: kubernetes.kubespray.kubespray_defaults}
    - { role: kubernetes.kubespray.upgrade.pre_upgrade, tags: pre_upgrade }
    - { role: kubernetes.kubespray.kubernetes.node, tags: node }
    - { role: kubernetes.kubespray.upgrade.post_upgrade, tags: post_upgrade }
    - { role: kubernetes.kubespray.kubespray_defaults}
